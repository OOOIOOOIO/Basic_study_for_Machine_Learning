                                                < 개념 >

 세션 : 클라이언트와 웹서버 간 네트워크 연결이 지속 유지되고 있는 상태
      즉, 사용자가 브라우저를 열어 서버에 접속한 뒤 접속을 종료할 때까지를 말함

       클라이언트가 Request를 보내면, 해당 서버의 엔진이 클라이언트에게 유일한 ID를
      부여하는데, 이 ID를 세션이라고 한다.

       세션 ID를 임시로 저장하여 페이지 이동 시 이용하거나, 클라리언트가 재 접속하였을 때
      클라이언트를 유일하게 구분하는 수단이 된다.

 HTTP 프로토콜 : 비접속형 프로토콜. 매 접속시마다 새로운 네트워크 연결이 이루어지는데
              세션이 연결 유지를 가능하게 해준다.


    < 세션의 원리 >

1. 세션 ID를 클라이언트가 웹사이트에 접속시 서버에서 발급해준다.
2. 서버에서 클라이언트에게 발급해준 세션 ID를 쿠키를 사용해서 저장한다.
3. 클라이언트가 다시 접속할 시, 이 쿠키(JSESSIOND)를 이용하여 세션 ID값을 서버에 전달한다.


    < 세션의 장점 >

1. 각 클라이언트에게 고유 ID를 부여한다.
2. 세션 ID로 클라이언트를 구분해서 클라이언트의 요구에 맞는 서비스를 제공할 수 있다.
3. 사용했던 정보들을 서버에 저장하기 때문에 보안상 쿠키보다 우수하다.


    < 세션의 단점 >

1. 서버에 저장되는 세션 때문에 서버에 처리를 요구하는 부하와 저장공간을 필요로 한다.


    < 쿠키와 세션의 차이점>

 큰 차이점은 저장되는 위치.
--> 쿠키는 클라이언트에 저장되어서 필요할 때 보내는 역할
--> 세션은 서버에 저장되어서 클라이언트에게 알려주어 사용한다.


(requests 모듈 사용)
